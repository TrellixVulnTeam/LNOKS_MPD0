{"ast":null,"code":"var _jsxFileName = \"/Users/romanlipatov/Documents/LNOX/LNOKS/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isInList, setIsInList] = useState(false);\n\n  const addMovie = movie => {\n    if (!movies.some(item => item.imdbId === movie.imdbId)) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    } else {\n      setIsInList(true);\n    }\n  };\n\n  const resetIsInList = () => {\n    setIsInList(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(FindMovie, {\n        onAddMovie: addMovie,\n        isInList: isInList,\n        resetIsInList: resetIsInList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Hj8mrLmc+3jZAemp60n54nnOasw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/romanlipatov/Documents/LNOX/LNOKS/src/App.tsx"],"names":["useState","MoviesList","FindMovie","App","movies","setMovies","isInList","setIsInList","addMovie","movie","some","item","imdbId","currentMovies","resetIsInList"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAU,EAAV,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMQ,QAAQ,GAAIC,KAAD,IAAkB;AACjC,QAAI,CAACL,MAAM,CAACM,IAAP,CAAYC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBH,KAAK,CAACG,MAA1C,CAAL,EAAwD;AACtDP,MAAAA,SAAS,CAACQ,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAmBJ,KAAnB,CAAlB,CAAT;AACD,KAFD,MAEO;AACLF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAND;;AAQA,QAAMO,aAAa,GAAG,MAAM;AAC1BP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,UAAU,EAAEI,QADd;AAEE,QAAA,QAAQ,EAAEF,QAFZ;AAGE,QAAA,aAAa,EAAEQ;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/BM;;GAAMX,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isInList, setIsInList] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(item => item.imdbId === movie.imdbId)) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    } else {\n      setIsInList(true);\n    }\n  };\n\n  const resetIsInList = () => {\n    setIsInList(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n          isInList={isInList}\n          resetIsInList={resetIsInList}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}