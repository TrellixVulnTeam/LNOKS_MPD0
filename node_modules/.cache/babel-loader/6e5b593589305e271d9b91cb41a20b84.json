{"ast":null,"code":"var _jsxFileName = \"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/components/FindMovie/FindMovie.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FindMovie = _ref => {\n  _s();\n\n  let {\n    onAddMovie,\n    isInList,\n    resetIsInList\n  } = _ref;\n  const [movie, setMovie] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n    } else {\n      const newMovie = {\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A' ? 'https://via.placeholder.com/360x270.png?text=no%20preview' : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID\n      };\n      setMovie(newMovie);\n      setIsLoading(false);\n    }\n  };\n\n  const changeQuery = event => {\n    setQuery(event.target.value);\n    setHasError(false);\n    resetIsInList();\n  };\n\n  const clear = () => {\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"find-movie\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"movie-title\",\n          children: \"Movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-cy\": \"titleField\",\n            type: \"text\",\n            id: \"movie-title\",\n            placeholder: \"Enter a title to search\",\n            className: classNames('input', {\n              'is-danger': hasError\n            }),\n            value: query,\n            onChange: changeQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help is-danger\",\n          \"data-cy\": \"errorMessage\",\n          children: \"Can't find a movie with such a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), isInList && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help is-danger\",\n          children: \"This movie is already added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-cy\": \"searchButton\",\n            type: \"submit\",\n            className: classNames('button', 'is-light', {\n              'is-loading': isLoading\n            }),\n            disabled: !query,\n            children: movie ? 'Search again' : 'Find a movie'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), movie && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-cy\": \"addButton\",\n            type: \"button\",\n            className: \"button is-primary\",\n            onClick: handleAddMovie,\n            children: \"Add to the list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"data-cy\": \"previewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FindMovie, \"DvK+u18S+JO95J2HfHL8jxwXMN8=\");\n\n_c = FindMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindMovie\");","map":{"version":3,"sources":["/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/components/FindMovie/FindMovie.tsx"],"names":["classNames","React","useState","getMovie","MovieCard","FindMovie","onAddMovie","isInList","resetIsInList","movie","setMovie","query","setQuery","isLoading","setIsLoading","hasError","setHasError","handleSubmit","event","preventDefault","movieFromServer","newMovie","title","Title","description","Plot","imgUrl","Poster","imdbUrl","imdbID","imdbId","changeQuery","target","value","clear","handleAddMovie"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n  isInList: boolean,\n  resetIsInList: () => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n  isInList,\n  resetIsInList,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n    } else {\n      const newMovie = {\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID,\n      };\n\n      setMovie(newMovie);\n      setIsLoading(false);\n    }\n  };\n\n  const changeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n    resetIsInList();\n  };\n\n  const clear = () => {\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n      clear();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={changeQuery}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {isInList && (\n            <p className=\"help is-danger\">\n              This movie is already added\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n            {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}