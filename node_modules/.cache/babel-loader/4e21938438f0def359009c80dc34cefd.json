{"ast":null,"code":"import _asyncToGenerator from\"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/node_modules/@babel/runtime/regenerator/index.js\";import classNames from'classnames';import React,{useState}from'react';import{getMovie}from'../../api';import{MovieCard}from'../MovieCard';import'./FindMovie.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var FindMovie=function FindMovie(_ref){var onAddMovie=_ref.onAddMovie,isInList=_ref.isInList,resetIsInList=_ref.resetIsInList;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],setQuery=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),hasError=_useState8[0],setHasError=_useState8[1];var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var movieFromServer,newMovie;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setIsLoading(true);_context.next=4;return getMovie(query);case 4:movieFromServer=_context.sent;if('Error'in movieFromServer){setHasError(true);setIsLoading(false);}else{newMovie={title:movieFromServer.Title,description:movieFromServer.Plot,imgUrl:movieFromServer.Poster==='N/A'?'https://via.placeholder.com/360x270.png?text=no%20preview':movieFromServer.Poster,imdbUrl:\"https://www.imdb.com/title/\".concat(movieFromServer.imdbID),imdbId:movieFromServer.imdbID};setMovie(newMovie);setIsLoading(false);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var changeQuery=function changeQuery(event){setQuery(event.target.value);setHasError(false);resetIsInList();};var clear=function clear(){setMovie(null);setQuery('');};var handleAddMovie=function handleAddMovie(){if(movie){onAddMovie(movie);clear();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"find-movie\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",htmlFor:\"movie-title\",children:\"Movie title\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"input\",{\"data-cy\":\"titleField\",type:\"text\",id:\"movie-title\",placeholder:\"Enter a title to search\",className:classNames('input',{'is-danger':hasError}),value:query,onChange:changeQuery})}),hasError&&/*#__PURE__*/_jsx(\"p\",{className:\"help is-danger\",\"data-cy\":\"errorMessage\",children:\"Can't find a movie with such a title\"}),isInList&&/*#__PURE__*/_jsx(\"p\",{className:\"help is-danger\",children:\"This movie is already added\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field is-grouped\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"button\",{\"data-cy\":\"searchButton\",type:\"submit\",className:classNames('button','is-light',{'is-loading':isLoading}),disabled:!query,children:movie?'Search again':'Find a movie'})}),movie&&/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"button\",{\"data-cy\":\"addButton\",type:\"button\",className:\"button is-primary\",onClick:handleAddMovie,children:\"Add to the list\"})})]})]}),movie&&/*#__PURE__*/_jsxs(\"div\",{className:\"container\",\"data-cy\":\"previewContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Preview\"}),/*#__PURE__*/_jsx(MovieCard,{movie:movie})]})]});};","map":{"version":3,"sources":["/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/components/FindMovie/FindMovie.tsx"],"names":["classNames","React","useState","getMovie","MovieCard","FindMovie","onAddMovie","isInList","resetIsInList","movie","setMovie","query","setQuery","isLoading","setIsLoading","hasError","setHasError","handleSubmit","event","preventDefault","movieFromServer","newMovie","title","Title","description","Plot","imgUrl","Poster","imdbUrl","imdbID","imdbId","changeQuery","target","value","clear","handleAddMovie"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n  isInList: boolean,\n  resetIsInList: () => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n  isInList,\n  resetIsInList,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n    } else {\n      const newMovie = {\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID,\n      };\n\n      setMovie(newMovie);\n      setIsLoading(false);\n    }\n  };\n\n  const changeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n    resetIsInList();\n  };\n\n  const clear = () => {\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n      clear();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={changeQuery}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {isInList && (\n            <p className=\"help is-danger\">\n              This movie is already added\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}