{"ast":null,"code":"var _jsxFileName = \"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/components/FindMovie/FindMovie.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FindMovie = _ref => {\n  _s();\n\n  let {\n    onAddMovie,\n    isInList,\n    resetIsInList\n  } = _ref;\n  const [movie, setMovie] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n    } else {\n      const newMovie = {\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A' ? 'https://via.placeholder.com/360x270.png?text=no%20preview' : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID\n      };\n      setMovie(newMovie);\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"find-movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"movie-title\",\n          children: \"Movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-cy\": \"titleField\",\n            type: \"text\",\n            id: \"movie-title\",\n            placeholder: \"Enter a title to search\",\n            className: \"input is-dander\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help is-danger\",\n          \"data-cy\": \"errorMessage\",\n          children: \"Can't find a movie with such a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-cy\": \"searchButton\",\n            type: \"submit\",\n            className: \"button is-light\",\n            children: \"Find a movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-cy\": \"addButton\",\n            type: \"button\",\n            className: \"button is-primary\",\n            children: \"Add to the list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"data-cy\": \"previewContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FindMovie, \"DvK+u18S+JO95J2HfHL8jxwXMN8=\");\n\n_c = FindMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindMovie\");","map":{"version":3,"sources":["/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/components/FindMovie/FindMovie.tsx"],"names":["React","useState","getMovie","FindMovie","onAddMovie","isInList","resetIsInList","movie","setMovie","query","setQuery","isLoading","setIsLoading","hasError","setHasError","handleSubmit","event","preventDefault","movieFromServer","newMovie","title","Title","description","Plot","imgUrl","Poster","imdbUrl","imdbID","imdbId"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n  isInList: boolean,\n  resetIsInList: () => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n  isInList,\n  resetIsInList,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setHasError(true);\n      setIsLoading(false);\n    } else {\n      const newMovie = {\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieFromServer.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n        imdbId: movieFromServer.imdbID,\n      };\n\n      setMovie(newMovie);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {/* <MovieCard movie={movie} /> */}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}