{"ast":null,"code":"import _toConsumableArray from\"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.scss';import{MoviesList}from'./components/MoviesList';import{FindMovie}from'./components/FindMovie';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isInList=_useState4[0],setIsInList=_useState4[1];var addMovie=function addMovie(movie){if(!movies.some(function(item){return item.imdbId===movie.imdbId;})){setMovies(function(currentMovies){return[].concat(_toConsumableArray(currentMovies),[movie]);});}else{setIsInList(true);}};var resetIsInList=function resetIsInList(){setIsInList(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",children:/*#__PURE__*/_jsx(MoviesList,{movies:movies})}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar\",children:/*#__PURE__*/_jsx(FindMovie,{onAddMovie:addMovie,isInList:isInList,resetIsInList:resetIsInList})})]});};","map":{"version":3,"sources":["/Users/romanlipatov/Documents/Projects/React/react_movies-list-fetch-movies/src/App.tsx"],"names":["useState","MoviesList","FindMovie","App","movies","setMovies","isInList","setIsInList","addMovie","movie","some","item","imdbId","currentMovies","resetIsInList"],"mappings":"0UAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAO,YAAP,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,OAASC,SAAT,KAA0B,wBAA1B,C,wFAGA,MAAO,IAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACvB,cAA4BH,QAAQ,CAAU,EAAV,CAApC,wCAAOI,MAAP,eAAeC,SAAf,eACA,eAAgCL,QAAQ,CAAC,KAAD,CAAxC,yCAAOM,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAkB,CACjC,GAAI,CAACL,MAAM,CAACM,IAAP,CAAY,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,MAAL,GAAgBH,KAAK,CAACG,MAA1B,EAAhB,CAAL,CAAwD,CACtDP,SAAS,CAAC,SAAAQ,aAAa,qCAAQA,aAAR,GAAuBJ,KAAvB,IAAd,CAAT,CACD,CAFD,IAEO,CACLF,WAAW,CAAC,IAAD,CAAX,CACD,CACF,CAND,CAQA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BP,WAAW,CAAC,KAAD,CAAX,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,UAAD,EAAY,MAAM,CAAEH,MAApB,EADF,EADF,cAKE,YAAK,SAAS,CAAC,SAAf,uBACE,KAAC,SAAD,EACE,UAAU,CAAEI,QADd,CAEE,QAAQ,CAAEF,QAFZ,CAGE,aAAa,CAAEQ,aAHjB,EADF,EALF,GADF,CAeD,CA/BM","sourcesContent":["import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isInList, setIsInList] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(item => item.imdbId === movie.imdbId)) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    } else {\n      setIsInList(true);\n    }\n  };\n\n  const resetIsInList = () => {\n    setIsInList(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n          isInList={isInList}\n          resetIsInList={resetIsInList}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}